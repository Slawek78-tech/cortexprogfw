
MEMORY
{
	rom : ORIGIN = 16K, LENGTH = 48K
	ram : ORIGIN = 0x20001000, LENGTH = 4K
	trash : ORIGIN = 0xffff0000, LENGTH = 65535
}

SECTIONS
{
	. = 0x00000000;
	.vectors : { *(.vectors) }  > rom
	
	.text : { *(.text) *(.text.*) ; }  > rom
	.rodata : { *(.rodata) *(.rodata.*) ;  . = ALIGN(4) ; __data_data = ABSOLUTE(.) ;}  > rom

	. = 0x20000800;
	.data : AT ( ADDR ( .rodata ) + SIZEOF ( .rodata ) ) {  . = ALIGN(4) ;  __data_start = ADDR ( .data ) + . ; *(.data) ; *(.data.*) ;  . = ALIGN(4) ;  __data_end = ADDR ( .data ) + . ; } > ram
	.bss  :  {  . = ALIGN(4) ;  __bss_start  = ABSOLUTE(.) ; *(.bss) *(.bss.*) *(COMMON) ;  . = ALIGN(4) ;  __bss_end  = ABSOLUTE(.) ; } > ram

	.trash1 : { *(.ARM.exidx) *(.ARM.exidx.*) ; }  > trash
	.trash2 : { *(.init) *(.init.*) ; *(.fini) *(.fini.*) ; }  > trash
}

__stack_top = (ORIGIN(ram) + LENGTH(ram)) & 0xfffffff8;
__vectors_start = ORIGIN(rom);


ENTRY(__VECTORS)


